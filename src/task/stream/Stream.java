package task.stream;

import java.util.ArrayList;
import java.util.List;
import java.util.function.BiFunction;
import java.util.stream.Collectors;

public class Stream {
    public static void main(String[] args) {
        //Реализуйте функциональность согласно описанию
        List<String> list= new ArrayList<>();
        list.add("Akim");
        list.add("Pasha");
        list.add("Sasha");
        list.add("Antonio");
        list.add("Santonio");
        list.add("Santiago");
        List<Integer> list1 = new ArrayList<>();
        list1.add(2);
        list1.add(9);
        list1.add(5);
        list1.add(2);
        list1.add(9);
        list1.add(5);

// TODO: Напишите метод, который принимает два числа от пользователя и использует функциональный интерфейс BinaryOperator
//  для сложения этих чисел и вывода результата.
        BiFunction<Integer, Integer, Integer> sum = Integer::sum;
        System.out.println("Sum = " + sum.apply(2, 3));

// TODO: Напишите метод, который принимает список слов от пользователя и использует функциональный интерфейс Predicate
//  для фильтрации слов, начинающихся с определенной буквы, и вывода отфильтрованного списка.
        System.out.println(list.stream().filter(str -> str.startsWith("S")).collect(Collectors.toList()));
// TODO: Напишите метод, который принимает список чисел от пользователя и использует функциональный интерфейс Function
//  для преобразования каждого числа в его квадрат и вывода списка квадратов.
        list1.stream().map(e -> e*e).forEach(System.out::println);

// TODO: Напишите метод, который принимает список строк от пользователя и использует функциональный интерфейс Consumer
//  для вывода каждой строки в верхнем регистре.
        list.stream().map(String::toUpperCase).forEach(System.out::println);

// TODO: Найти сумму всех чисел в списке. Описание: Напишите программу, которая принимает список целых чисел в качестве
//  входных данных и вычисляет их сумму с использованием стримов.
        System.out.println(list1.stream().reduce(Integer::sum));

// TODO: Найти среднее значение всех чисел в списке. Описание: Напишите программу, которая принимает список чисел в качестве
//  входных данных и вычисляет их среднее значение с использованием стримов.
        System.out.println(list1.stream().mapToInt(e -> e).average());

// TODO: Найти наибольшее число в списке. Описание: Напишите программу, которая принимает список чисел в качестве входных
//  данных и находит наибольшее число с использованием стримов.
        System.out.println(list1.stream().max((a,e)->a-e));

// TODO: Найти наименьшее число в списке. Описание: Напишите программу, которая принимает список чисел в качестве входных
//  данных и находит наименьшее число с использованием стримов.
        System.out.println(list1.stream().min((a,e)->a-e));

// TODO: Проверить, содержит ли список определенное значение. Описание: Напишите программу, которая принимает список
//  элементов и определенное значение в качестве входных данных и проверяет, содержит ли список это значение с использованием
//  стримов.
        System.out.println(list1.stream().anyMatch(e -> list1.contains(9)));

// TODO: Удалить дубликаты из списка. Описание: Напишите программу, которая принимает список элементов в качестве входных
//  данных и удаляет все дубликаты, оставляя только уникальные элементы с использованием стримов.
        System.out.println(list1.stream().distinct().toList());

// TODO: Преобразовать список строк в список их длин. Описание: Напишите программу, которая принимает список строк в
//  качестве входных данных и преобразует его в список их длин с использованием стримов.
        System.out.println(list.stream().map(String::length).collect(Collectors.toList()));

// TODO: Соединить все строки из списка в одну строку. Описание: Напишите программу, которая принимает список строк в
//  качестве входных данных и соединяет их все в одну строку с использованием стримов.
        System.out.println(list.stream().collect(Collectors.joining()));

// TODO: Отфильтровать список чисел, оставив только четные числа. Описание: Напишите программу, которая принимает список
//  чисел в качестве входных данных и фильтрует его, оставляя только четные числа с использованием стримов.
        System.out.println(list1.stream().filter(e->e%2 == 0).collect(Collectors.toList()));
    }
}